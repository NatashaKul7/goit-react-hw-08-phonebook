{"version":3,"file":"static/js/192.fbdf671b.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/ContactForm/Form.styled.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/Form.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 30px;\n  background-color: rgba(255, 255, 255, 0.7);\n  border-radius: 30px;\n`;\n","import styled from 'styled-components';\n\nexport const FormBox = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 600px;\n\n  button {\n    margin-top: 16px;\n    padding: 4px;\n    border-radius: 20px;\n    color: #ffffff;\n    background-color: rgba(0, 0, 255, 0.7);\n    font-size: inherit;\n  }\n  button:hover {\n    scale: 1.1;\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.19) 0px 10px 20px;\n  }\n  input {\n    width: 580px;\n    padding: 4px 8px;\n    border-radius: 20px;\n    outline-color: #0000ff;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContactsBox = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding-left: 0;\n\n  gap: 16px;\n\n  li {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  button {\n    margin-left: auto;\n    padding: 4px 8px;\n\n    border-radius: 20px;\n    background-color: #00ffff;\n    font-size: inherit;\n    color: #ffffff;\n    background-color: rgba(0, 0, 255, 0.7);\n  }\n  button:hover {\n    scale: 1.1;\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.19) 0px 10px 20px;\n  }\n  .contactName {\n    margin-right: 8px;\n  }\n\n  .contacts-buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 8px;\n  }\n`;\n\nexport const StyledEditForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  input {\n    padding: 4px 8px;\n    border-radius: 20px;\n    outline-color: #0000ff;\n  }\n\n  p {\n    margin: 0;\n    margin-bottom: 8px;\n  }\n\n  .editName {\n    margin-right: 8px;\n  }\n  .editNumber {\n    margin-right: 4px;\n  }\n  .save-button {\n    margin-right: 8px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ContactsBox, StyledEditForm } from './Contacts.styled';\nimport { deleteContacts, updateContacts } from 'redux/contacts/operations';\nimport { setEditingContactId } from 'redux/contacts/contactsSlice';\n\nexport const Contacts = ({ contacts }) => {\n  const editingContactId = useSelector(\n    state => state.contacts.editingContactId\n  );\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContacts(id));\n  };\n\n  const handleEdit = id => {\n    dispatch(setEditingContactId(id));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.currentTarget.elements.name.value;\n    const number = e.currentTarget.elements.number.value;\n    const updatedContact = {\n      name,\n      number,\n    };\n    dispatch(updateContacts(updatedContact))\n      .unwrap()\n      .then(() => dispatch(setEditingContactId(null)));\n  };\n\n  return (\n    <ContactsBox>\n      {contacts?.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            {editingContactId === id && (\n              <StyledEditForm onSubmit={handleSubmit} className=\"edit-form\">\n                <label>\n                  <p className=\"editName\">Name</p>\n                  <input type=\"text\" defaultValue={name} name=\"name\" />\n                </label>\n                <label>\n                  <p className=\"editNumber\">Phone</p>\n                  <input type=\"number\" defaultValue={number} name=\"number\" />\n                </label>\n                <div>\n                  <button type=\"submit\" className=\"save-button\">\n                    Save contact\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => dispatch(setEditingContactId(null))}\n                  >\n                    &times;\n                  </button>\n                </div>\n              </StyledEditForm>\n            )}\n            <div>\n              <span className=\"contactName\">{name}:</span>\n              <span>{number}</span>\n            </div>\n            <div className=\"contacts-buttons\">\n              <button type=\"button\" onClick={() => handleEdit(id)}>\n                Edit\n              </button>\n              <button type=\"button\" onClick={() => handleDelete(id)}>\n                Delete\n              </button>\n            </div>\n          </li>\n        );\n      })}\n    </ContactsBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterBox = styled.div`\n  input {\n    padding: 4px 8px;\n    border-radius: 20px;\n    outline-color: #0000ff;\n  }\n`;\n","import { FilterBox } from './Filter.styled';\n\nexport const Filter = ({ name, onChange }) => {\n  return (\n    <FilterBox>\n      <h3>Find contact by name</h3>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={e => onChange(e.target.value)}\n      />\n    </FilterBox>\n  );\n};\n","import { FormBox } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\n\nexport function Form() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.contacts.item);\n\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    const name = e.currentTarget.elements.name.value;\n    const number = e.currentTarget.elements.number.value;\n\n    const newState = {\n      name,\n      number,\n    };\n\n    if (contacts.find(contact => contact.name === name)) {\n      return alert(`Oops, the contact with name ${name} already exists`);\n    }\n\n    dispatch(addContacts(newState));\n    e.target.reset();\n  };\n\n  return (\n    <FormBox onSubmit={handleAddContact}>\n      <h1>Phonebook</h1>\n      <label htmlFor=\"nameId\">\n        <p>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Gomer Simpson\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id=\"nameId\"\n        />\n      </label>\n      <label htmlFor=\"numberId\">\n        <p>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"777-77-77\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          id=\"numberId\"\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </FormBox>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/contactsSlice';\n\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { requestContacts } from 'redux/contacts/operations';\nimport { Container } from 'components/App/App.styled';\nimport { Form } from 'components/ContactForm/Form';\n\nfunction ContactsPage() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.contacts.item);\n  const isLoading = useSelector(state => state.contacts.contacts.isLoading);\n  const error = useSelector(state => state.contacts.contacts.error);\n  const filter = useSelector(state => state.contacts.filter);\n\n  useEffect(() => {\n    dispatch(requestContacts());\n  }, [dispatch]);\n\n  const handleFilterChange = value => {\n    dispatch(filterContact(value));\n  };\n\n  const filterContacts = () => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <Container>\n      <Form />\n      <h2>Contacts</h2>\n      {isLoading && !error && <h3>Loading...</h3>}\n      {contacts.length !== 0 ? (\n        <>\n          <Filter onChange={handleFilterChange} filter={filter} />\n          <Contacts contacts={filterContacts()} />\n        </>\n      )\n    : (<p>There is no any contacts here yet</p>)}\n    </Container>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","FormBox","ContactsBox","StyledEditForm","_templateObject2","Contacts","_ref","contacts","editingContactId","useSelector","state","dispatch","useDispatch","handleSubmit","e","preventDefault","updatedContact","name","currentTarget","elements","value","number","updateContacts","unwrap","then","setEditingContactId","_jsx","children","map","_ref2","id","_jsxs","onSubmit","className","type","defaultValue","onClick","handleEdit","deleteContacts","handleDelete","FilterBox","Filter","onChange","target","Form","item","newState","find","contact","alert","concat","addContacts","reset","htmlFor","placeholder","pattern","title","required","isLoading","error","filter","useEffect","requestContacts","length","_Fragment","filterContact","toLowerCase","includes"],"sourceRoot":""}