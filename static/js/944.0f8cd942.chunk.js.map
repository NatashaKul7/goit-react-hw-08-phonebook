{"version":3,"file":"static/js/944.0f8cd942.chunk.js","mappings":"sLAEaA,E,QAAYC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6L,sECAtBC,E,QAAUH,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8c,uJCsDlC,EAlDiB,WACf,IAAAE,GAKIC,EAAAA,EAAAA,MAJFC,EAAQF,EAARE,SACAC,EAAYH,EAAZG,aACAC,EAAKJ,EAALI,MACaC,EAAML,EAAnBM,UAAaD,OAGTE,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,MAACV,EAAAA,EAAO,CAACW,SAAUP,GANJ,SAAAQ,GACfJ,GAASK,EAAAA,EAAAA,IAAcD,IACvBP,GACF,IAG4CS,SAAA,EACxCJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,UACHC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMb,EAAS,OAAQ,CAAEc,UAAU,KAAO,IACxCC,KAAK,OACLC,YAAY,mBAEbb,EAAOc,OAAQL,EAAAA,EAAAA,KAAA,QAAAD,SAAM,+BAExBJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,WACHC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMb,EAAS,QAAS,CAAEc,UAAU,KAAO,IACzCC,KAAK,QACLC,YAAY,qBAEbb,EAAOe,QAASN,EAAAA,EAAAA,KAAA,QAAAD,SAAM,+BAEzBJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cACHC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMb,EAAS,WAAY,CAAEc,UAAU,EAAMK,UAAW,KAAI,IAC1DJ,KAAK,WACLC,YAAY,aAEbb,EAAOiB,WAAYR,EAAAA,EAAAA,KAAA,QAAAD,SAAM,+BAG5BC,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQJ,SAAC,cAG5B,EC1CA,EARqB,WACnB,OACEC,EAAAA,EAAAA,KAACnB,EAAAA,EAAS,CAAAkB,UACRC,EAAAA,EAAAA,KAACS,EAAQ,KAGf,C","sources":["components/App/App.styled.js","components/ContactForm/Form.styled.js","components/RegisterForm/Register.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 30px;\n\n  p,\n  span,\n  input {\n    font-size: 20px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FormBox = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 600px;\n\n  button {\n    margin-top: 16px;\n    padding: 4px;\n    border-radius: 20px;\n    background-color: #00ffff;\n    font-size: inherit;\n  }\n  button:hover {\n    scale: 1.1;\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.19) 0px 10px 20px;\n  }\n  input {\n    width: 580px;\n    padding: 4px 8px;\n    border-radius: 20px;\n    outline-color: #00ffff;\n  }\n`;\n","import { FormBox } from 'components/ContactForm/Form.styled';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { registerThunk } from 'redux/user/operations';\n\nconst Register = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(registerThunk(data));\n    reset();\n  };\n\n  return (\n    <FormBox onSubmit={handleSubmit(onSubmit)}>\n      <label>\n        <p>Name</p>\n        <input\n          {...register('name', { required: true })}\n          type=\"text\"\n          placeholder=\"Gomez Simpson\"\n        />\n        {errors.name && <span>This field is required</span>}\n      </label>\n      <label>\n        <p>Email</p>\n        <input\n          {...register('email', { required: true })}\n          type=\"email\"\n          placeholder=\"gomez@gmail.com\"\n        />\n        {errors.email && <span>This field is required</span>}\n      </label>\n      <label>\n        <p>Password</p>\n        <input\n          {...register('password', { required: true, minLength: 7 })}\n          type=\"password\"\n          placeholder=\"*******\"\n        />\n        {errors.password && <span>This field is required</span>}\n      </label>\n\n      <button type=\"submit\">Sign up</button>\n    </FormBox>\n  );\n};\n\nexport default Register;\n","import { Container } from 'components/App/App.styled';\nimport Register from 'components/RegisterForm/Register';\nimport React from 'react';\n\nconst RegisterPage = () => {\n  return (\n    <Container>\n      <Register />\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","FormBox","_useForm","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","_jsxs","onSubmit","data","registerThunk","children","_jsx","_objectSpread","required","type","placeholder","name","email","minLength","password","Register"],"sourceRoot":""}